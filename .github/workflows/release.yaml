name: Release

on:
  push:
    tags:
      - 'v*'
jobs:
  kubeeye-apiserver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build ApiServer and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: build/apiserver/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: kubespheredev/kubeeye-apiserver:${{ github.ref_name }}

  kubeeye-controller:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Controller and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: build/controller/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: kubespheredev/kubeeye-controller:${{ github.ref_name }}

  kubeeye-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Job and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: build/job/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: kubespheredev/kubeeye-job:${{ github.ref_name }}

  offline-package:
    needs:
      - kubeeye-apiserver
      - kubeeye-controller
      - kubeeye-job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pull images of kubeeye
        run: |
          docker pull kubespheredev/kubeeye-apiserver:${{ github.ref_name }}
          docker pull kubespheredev/kubeeye-controller:${{ github.ref_name }}
          docker pull kubespheredev/kubeeye-job:${{ github.ref_name }}
          docker pull kubesphere/kube-rbac-proxy:v0.11.0

      - name: Build offline package
        run: |
          mkdir -p kubeeye-offline-${{ github.ref_name }}/images
          cp -r chart kubeeye-offline-${{ github.ref_name }}
          cp -r deploy/rule kubeeye-offline-${{ github.ref_name }}
          docker save -o kubeeye-offline-${{ github.ref_name }}/images/kubeeye-apiserver.tar kubespheredev/kubeeye-apiserver:${{ github.ref_name }}
          docker save -o kubeeye-offline-${{ github.ref_name }}/images/kubeeye-controller.tar kubespheredev/kubeeye-controller:${{ github.ref_name }}
          docker save -o kubeeye-offline-${{ github.ref_name }}/images/kubeeye-job.tar kubespheredev/kubeeye-job:${{ github.ref_name }}
          docker save -o kubeeye-offline-${{ github.ref_name }}/images/kube-rbac-proxy.tar kubesphere/kube-rbac-proxy:v0.11.0
          tar -zcvf kubeeye-offline-${{ github.ref_name }}.tar.gz kubeeye-offline-${{ github.ref_name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: kubeeye-offline-${{ github.ref_name }}.tar.gz
